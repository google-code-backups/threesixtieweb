CREATE OR REPLACE VIEW average_score_view AS
SELECT p.Reviewee AS Reviewee, a.Question AS Question, AVG(a.Answer) AS Average_Score
FROM answer a
JOIN poll p
ON a.Poll = p.ID
WHERE Reviewee != Reviewer
GROUP BY Question, Reviewee;

CREATE OR REPLACE VIEW reviews_given_view AS
SELECT p.Reviewer AS Reviewer, count(*) AS Aantal_Reviews
FROM poll p
WHERE
        p.Status = (SELECT ID FROM poll_status WHERE Name='Ingestuurd')
GROUP BY p.Reviewer;

CREATE OR REPLACE VIEW reviews_received_view AS
SELECT p.Reviewee AS Reviewee, count(*) AS Aantal_Reviews
FROM poll p
WHERE
    p.Status = (SELECT ID FROM poll_status WHERE Name='Ingestuurd')
    AND
    p.Reviewee != p.Reviewer
	/*the own review is not added here -- this is correct*/
GROUP BY p.Reviewee;

CREATE OR REPLACE VIEW teammember_view AS
SELECT p.Reviewee, count(*) AS Aantal_Teamleden
FROM poll p
WHERE
    p.Reviewee != p.Reviewer
    AND
    p.Reviewer NOT IN (
        SELECT Manager
        FROM department
        /*WHERE ID = (
            SELECT Department
            FROM user_department
            WHERE User = p.Reviewee
        )*/
        /* this includes managers except your own */
    )
    AND
    p.Reviewer = ANY (
            SELECT User
            FROM user_department
            WHERE Department = (
                SELECT Department
                FROM user_department
                WHERE User = p.Reviewee
            )
            /* get reviewers being member of reviewee's department */
    )
GROUP BY p.Reviewee;

CREATE OR REPLACE VIEW notteammember_view AS
SELECT p.Reviewee, count(*) AS Aantal_NietTeamleden
FROM poll p
WHERE
    p.Reviewee != p.Reviewer
    AND
    p.Reviewer NOT IN (
        SELECT Manager
        FROM department
		/*here you exclude all managers please explain this being complementary to above statement */
    )
    AND
    p.Reviewer NOT IN (
        SELECT User
        FROM user_department
        WHERE Department = (
            SELECT Department
            FROM user_department
            WHERE User = p.Reviewee
        )
		/*exclude members of your department regardless them being manager */
    )
GROUP BY Reviewee;

CREATE OR REPLACE VIEW teammanager_view AS
SELECT p.Reviewee, count(*) AS Aantal_TeamManagers
FROM poll p
WHERE
    p.Reviewee != p.Reviewer
    AND
    p.Reviewer = ANY (
    	SELECT Manager
        FROM department
        WHERE ID = (
            SELECT Department
            FROM user_department
            WHERE ID = p.Reviewee
        )
    )
GROUP BY Reviewee;

CREATE OR REPLACE VIEW notteammanager_view AS
SELECT p.Reviewee, count(*) AS Aantal_NietTeamManagers
FROM poll p
WHERE
    p.Reviewee != p.Reviewer
    AND
    p.Reviewer = ANY (
    	SELECT Manager
        FROM department
        WHERE
        	ID != (
            	SELECT Department
           		FROM user_department
            	WHERE User = p.Reviewee
        	)
    )
GROUP BY Reviewee;

CREATE OR REPLACE VIEW preferred_reviewers_view AS
SELECT User AS Reviewee, count(*) AS Aantal_Preferred_Reviewers
FROM preferred_poll pf, poll p
WHERE
    p.Reviewer != p.Reviewee
    AND
    pf.Reviewer = p.Reviewer
    AND
    pf.Reviewee = p.Reviewee
GROUP BY Reviewee;
/* explain why poll table is needed for this query */
/* First you check what users are preferred. 
 * Than you look in the poll table, to which 'preferred couples' are actually generated by the algorithm (these are stored in the poll table) */

CREATE OR REPLACE VIEW preferred_reviewees_view AS
SELECT Reviewer, count(*) AS Aantal_Preferred_Reviewees
FROM preferred_poll pf
WHERE
        pf.Reviewee = ANY(SELECT Reviewee FROM poll WHERE Reviewer = pf.Reviewer)
    AND
    	pf.User = pf.Reviewer
GROUP BY pf.Reviewer;
/* explain why poll table is needed for this query */